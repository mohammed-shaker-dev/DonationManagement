@inject CustomAuthStateProvider AuthProvider
@inject NavigationManager Navigation

@page "/authentication/login"
@page "/login"

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="card p-4 shadow-lg" style="width: 350px;">
        <h3 class="text-center mb-3">Login</h3>

        <EditForm Model="this" OnValidSubmit="LoginUser">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group mb-3">
                <label for="username" class="form-label">Username</label>
                <InputText id="username" class="form-control" @bind-Value="username" placeholder="Enter username" required />
            </div>

            <div class="form-group mb-3">
                <label for="password" class="form-label">Password</label>
                <InputText id="password" class="form-control" type="password" @bind-Value="password" placeholder="Enter password" required />
            </div>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger p-2" role="alert">@errorMessage</div>
            }

            <button type="submit" class="btn btn-primary w-100">Login</button>
        </EditForm>

         
    </div>
</div>

@if (isLoggedIn)
{
    <div class="text-center mt-3">
        <p>Welcome, <strong>@username</strong>!</p>
        <button class="btn btn-danger" @onclick="Logout">Logout</button>
    </div>
}

@code {
    private string username = "";
    private string password = "";
    private bool isLoggedIn = false;
    private string errorMessage = "";

    private async Task LoginUser()
    {
        var result =   AuthProvider.Login(username, password);
        if (result)
        {
            isLoggedIn = true;
            errorMessage = "";
            Navigation.NavigateTo("/");
        }
        else
        {
            errorMessage = "Invalid username or password!";
        }
        StateHasChanged();
    }

    private void Logout()
    {
        AuthProvider.Logout();
        isLoggedIn = false;
        Navigation.NavigateTo("/login");
    }
}
