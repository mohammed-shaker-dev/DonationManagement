@page "/project-details/{id:long}"
@using Dashboard.Core.ProjectAggregate
@using Donation.Web.Services
@inject ProjectServicePublic ProjectService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<section class="main-section project-details-section">
    @if (loading)
    {
        <div class="text-center mt-5 pt-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-3">جاري تحميل تفاصيل المشروع...</p>
        </div>
    }
    else if (project == null)
    {
        <div class="centerized-box">
            <div class="alert alert-warning text-center">
                <h3>لم يتم العثور على المشروع</h3>
                <p>قد يكون المشروع غير موجود أو تم حذفه.</p>
                <a href="/projects" class="btn btn-mata mt-3">العودة إلى المشاريع</a>
            </div>
        </div>
    }
    else
    {
        <div class="container mb-4 mt-4">
            <!-- Header Section -->
            <div class="project-header mb-4">
                <h1 class="project-title mb-3">@project.Name</h1>
                <div class="project-meta d-flex flex-wrap align-items-center mb-4">
                    <span class="badge @GetStatusBadgeClass(project.Status) me-3">@GetStatusArabic(project.Status)</span>
                    <span class="meta-item me-3">تاريخ البدء: @FormatDate(project.CreatedDate)</span>
                    @if (project.CompletedDate.HasValue)
                    {
                        <span class="meta-item">تاريخ الإنجاز: @FormatDate(project.CompletedDate.Value)</span>
                    }
                </div>
            </div>

            <div class="row">
                <!-- Left Side: Description -->
                <div class="col-lg-7 order-lg-1 order-2">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h3 class="h5 mb-0">وصف المشروع</h3>
                        </div>
                        <div class="card-body">
                            <p>@(string.IsNullOrEmpty(project.Description) ? "لا يوجد وصف متاح" : project.Description)</p>

                            @if (!string.IsNullOrEmpty(project.AdditionalText))
                            {
                                <div class="mt-3">
                                    <h4 class="h6">معلومات إضافية</h4>
                                    <p>@project.AdditionalText</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Right Side: Expenses -->
                <div class="col-lg-5 order-lg-2 order-1 mb-4">
                    <div class="card mb-4">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h3 class="h5 mb-0">تفاصيل المصاريف</h3>
                            <span class="project-budget badge bg-primary fs-6">
                                <i class="bi bi-currency-exchange me-1"></i>
                                @project.TotalBudget.ToString("N0") ل.س
                            </span>
                        </div>
                        <div class="card-body p-0">
                            @if (project.Expenses != null && project.Expenses.Any())
                            {
                                <div class="table-responsive">
                                    <table class="table mb-0">
                                        <thead>
                                            <tr>
                                                <th>البند</th>
                                                <th>المبلغ</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var expense in project.Expenses)
                                            {
                                                <tr>
                                                    <td>@expense.Name</td>
                                                    <td>@expense.Value.ToString("N0") ل.س</td>
                                                </tr>
                                            }
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <th>الإجمالي</th>
                                                <th>@project.TotalBudget.ToString("N0") ل.س</th>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="p-3 text-center">
                                    <p class="text-muted mb-0">لا توجد مصاريف مسجلة</p>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="card project-donate-card">
                        <div class="card-body text-center">
                            <h4 class="mb-3">ساهم في المشاريع القادمة</h4>
                            <p>مساهمتك تساعدنا في تنفيذ المزيد من المشاريع لخدمة مدينتنا الحبيبة</p>
                            <a href="/#search" class="btn btn-mata w-100">ساهم الآن</a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Videos Section -->
            @if (project.Videos != null && project.Videos.Any())
            {
                <div class="mb-5">
                    <h3 class="h4 mb-3">فيديوهات المشروع</h3>
                    <div class="row">
                        @foreach (var video in project.Videos)
                        {
                            @if (!string.IsNullOrEmpty(video))
                            {
                                <div class="col-md-6 mb-3">
                                    <div class="card">
                                        <div class="card-body p-2">
                                            @if (IsYoutubeUrl(video))
                                            {
                                                <div class="ratio ratio-16x9">
                                                    <iframe src="@GetYoutubeEmbedUrl(video)"
                                                            title="YouTube video player"
                                                            frameborder="0"
                                                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                                            allowfullscreen></iframe>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="text-center p-4">
                                                    <a href="@video" target="_blank" class="btn btn-primary">
                                                        <i class="bi bi-play-circle me-2"></i>
                                                        مشاهدة الفيديو
                                                    </a>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            }

            <!-- Images Section -->
            @if (project.Images != null && project.Images.Any())
            {
                <div class="mb-5">
                    <h3 class="h4 mb-3">صور المشروع</h3>
                    <div class="row g-3">
                        @foreach (var image in project.Images)
                        {
                            @if (!string.IsNullOrEmpty(image))
                            {
                                <div class="col-md-4 col-sm-6 mb-3">
                                    <div class="project-image-card" @onclick="() => OpenImageModal(image)">
                                        <img src="@image" class="img-fluid" alt="صورة المشروع" />
                                        <div class="image-overlay">
                                            <i class="bi bi-arrows-fullscreen expand-icon"></i>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            }

            <div class="text-center mb-5">
                <a href="/projects" class="btn btn-secondary">
                    <i class="bi bi-arrow-right me-2"></i>
                    العودة إلى المشاريع
                </a>
            </div>
        </div>
    }
</section>

<!-- Image Modal Dialog -->
@if (showImageModal)
{
    <div class="image-modal-backdrop" @onclick="CloseImageModal">
        <div class="image-modal" @onclick:stopPropagation="true">
            <div class="image-modal-header">
                <button type="button" class="btn-close" @onclick="CloseImageModal"></button>
            </div>
            <div class="image-modal-body">
                <img src="@currentImage" class="img-fluid" alt="صورة موسعة" />
            </div>
        </div>
    </div>
}

<style>
    .project-details-section {
        padding-top: 100px;
    }

    .project-title {
        font-size: 2.25rem;
        color: var(--bs-primary);
    }

    .meta-item {
        color: #666;
        font-size: 0.95rem;
    }

    .project-image-card {
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        height: 200px;
        position: relative;
        cursor: pointer;
        transition: transform 0.3s ease;
    }

        .project-image-card:hover {
            transform: scale(1.02);
        }

        .project-image-card img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.2);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .project-image-card:hover .image-overlay {
        opacity: 1;
    }

    .expand-icon {
        font-size: 2rem;
        color: white;
        text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
    }

    .project-donate-card {
        background-color: #f7f4d5;
        border: none;
        border-radius: 8px;
    }

    .project-budget {
        font-size: 1.1rem;
    }

    /* Image Modal Styles */
    .image-modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.85);
        z-index: 1050;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
    }

    .image-modal {
        max-width: 90%;
        max-height: 90%;
        background-color: #fff;
        border-radius: 8px;
        overflow: hidden;
        position: relative;
    }

    .image-modal-header {
        position: absolute;
        top: 10px;
        right: 10px;
        padding: 5px;
        z-index: 10;
    }

    .image-modal-body {
        text-align: center;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .image-modal-body img {
            max-width: 100%;
            max-height: 85vh;
            object-fit: contain;
        }

    .btn-close {
        background-color: white;
        opacity: 0.8;
        border-radius: 50%;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
        width: 30px;
        height: 30px;
    }

        .btn-close:hover {
            opacity: 1;
        }

    @@media (max-width: 992px) {
        .project-title

    {
        font-size: 1.75rem;
    }

    }

    @@media (max-width: 768px) {
        .project-title

    {
        font-size: 1.5rem;
    }

    .project-image-card {
        height: 180px;
    }

    }

    @@media (max-width: 576px) {
        .project-image-card

    {
        height: 200px;
    }

    .image-modal {
        max-width: 95%;
        max-height: 95%;
    }

    }
</style>

@code {
    [Parameter] public long Id { get; set; }

    private ProjectDTO project;
    private bool loading = true;
    private bool showImageModal = false;
    private string currentImage = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadProject();
    }

    private async Task LoadProject()
    {
        loading = true;
        try
        {
            project = await ProjectService.GetProjectByIdAsync(Id);

            // Initialize empty collections to avoid null reference errors
            if (project != null)
            {
                project.Images ??= new List<string>();
                project.Videos ??= new List<string>();
                project.Expenses ??= new List<ExpenseDTO>();

                // Filter out any null or empty entries
                project.Images = project.Images.Where(img => !string.IsNullOrEmpty(img)).ToList();
                project.Videos = project.Videos.Where(vid => !string.IsNullOrEmpty(vid)).ToList();
            }

            Console.WriteLine($"Project loaded: {project?.Name}, Images: {project?.Images?.Count}, Videos: {project?.Videos?.Count}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading project: {ex.Message}");
        }
        finally
        {
            loading = false;
        }
    }

    private void OpenImageModal(string imageUrl)
    {
        currentImage = imageUrl;
        showImageModal = true;
        StateHasChanged();
    }

    private void CloseImageModal()
    {
        showImageModal = false;
        StateHasChanged();
    }

    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Planned" => "bg-info",
            "InProgress" => "bg-primary",
            "Completed" => "bg-success",
            _ => "bg-secondary"
        };
    }

    private string GetStatusArabic(string status)
    {
        return status switch
        {
            "Planned" => "مخطط",
            "InProgress" => "قيد التنفيذ",
            "Completed" => "مكتمل",
            _ => status
        };
    }

    private string FormatDate(DateTime date)
    {
        return date.ToString("yyyy-MM-dd");
    }

    private bool IsYoutubeUrl(string url)
    {
        if (string.IsNullOrEmpty(url)) return false;
        return url.Contains("youtube.com") || url.Contains("youtu.be");
    }

    private string GetYoutubeEmbedUrl(string url)
    {
        try
        {
            if (string.IsNullOrEmpty(url)) return "";

            if (url.Contains("youtube.com/watch"))
            {
                var uri = new Uri(url);
                var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
                var videoId = query["v"];
                return $"https://www.youtube.com/embed/{videoId}";
            }
            else if (url.Contains("youtu.be"))
            {
                var uri = new Uri(url);
                var path = uri.AbsolutePath.Trim('/');
                return $"https://www.youtube.com/embed/{path}";
            }

            return url; // Return original if parsing fails
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error parsing YouTube URL: {ex.Message}");
            return "";
        }
    }
}