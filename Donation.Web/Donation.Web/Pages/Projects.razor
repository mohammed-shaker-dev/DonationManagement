@page "/projects"
@using Dashboard.Core.ProjectAggregate
@using Donation.Web.Services
@inject ProjectServicePublic ProjectService
@inject NavigationManager NavigationManager
<style>

    .projects-section {
        padding-top: 120px;
    }

    .project-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        height: 100%;
        overflow: hidden;
        border-radius: 10px;
        border: none;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }

        .project-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.15);
        }

    .project-thumbnail {
        height: 200px;
        object-fit: cover;
    }

    .project-card .card-title {
        font-size: 1.25rem;
        font-weight: bold;
    }

    .project-card .card-body {
        padding: 1.5rem;
    }

    .card-footer {
        background-color: white;
        border-top: 1px solid rgba(0,0,0,0.05);
    }

    .project-budget {
        font-weight: bold;
        color: var(--bs-primary);
    }

    .projects-list {
        animation: fadeIn 0.8s ease-out;
    }

    @@keyframes fadeIn {
        from

    {
        opacity: 0;
    }

    to {
        opacity: 1;
    }

    }

    @@media (max-width: 768px) {
        .project-thumbnail

    {
        height: 150px;
    }

    }
</style>
<section class="main-section projects-section">
    <div class="centerized-box">
        <h1>
            <span class="r"><span class="text-primary">المشاريع </span> <span class="text-secondary">التي نفذتها مساهماتكم</span></span>
        </h1>

        <p class="lead mb-5">
            بفضل مساهماتكم السخية، تمكنا من تنفيذ العديد من المشاريع التي أسهمت في خدمة مدينتنا الحبيبة.
        </p>

        @if (loading)
        {
            <div class="text-center my-5">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-3">جاري تحميل المشاريع...</p>
            </div>
        }
        else if (!allProjects.Any())
        {
            <div class="alert alert-info">
                <h4 class="alert-heading">لا توجد مشاريع حالياً</h4>
                <p>سيتم عرض المشاريع هنا بمجرد البدء بها. تابعونا للاطلاع على آخر المستجدات.</p>
            </div>
        }
        else
        {
            <div class="projects-list">
                <div class="row">
                    @foreach (var project in allProjects)
                    {
                        <div class="col-md-6 col-lg-4 mb-4">
                            @ProjectCard(project)
                        </div>
                    }
                </div>
            </div>
        }

        <div class="action-container mt-5">
            <a class="btn btn-mata" href="/#search">المساهمة في المشاريع القادمة</a>
        </div>
    </div>
</section>

@code {
    private List<ProjectDTO> allProjects = new List<ProjectDTO>();
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadProjects();
    }

    private async Task LoadProjects()
    {
        loading = true;
        try
        {
            allProjects = await ProjectService.GetProjectsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading projects: {ex.Message}");
        }
        finally
        {
            loading = false;
        }
    }

    private RenderFragment ProjectCard(ProjectDTO project) => builder =>
    {
        builder.OpenElement(0, "div");
        builder.AddAttribute(1, "class", "card project-card");

        // Card thumbnail
        builder.OpenElement(2, "div");
        builder.AddAttribute(3, "class", "card-img-top project-thumbnail-container");

        if (project.Images != null && project.Images.Any())
        {
            builder.OpenElement(4, "img");
            builder.AddAttribute(5, "src", project.Images.First());
            builder.AddAttribute(6, "class", "project-thumbnail w-100");
            builder.AddAttribute(7, "alt", project.Name);
            builder.CloseElement();
        }
        else
        {
            builder.OpenElement(8, "div");
            builder.AddAttribute(9, "class", "project-thumbnail d-flex align-items-center justify-content-center bg-light");
            builder.AddMarkupContent(10, "<i class=\"bi bi-image text-muted\" style=\"font-size: 3rem;\"></i>");
            builder.CloseElement();
        }

        // Status badge
        builder.OpenElement(11, "div");
        builder.AddAttribute(12, "class", "position-absolute top-0 end-0 m-3");
        builder.OpenElement(13, "span");
        builder.CloseElement();
        builder.CloseElement();

        builder.CloseElement(); // Close thumbnail container

        // Card body
        builder.OpenElement(16, "div");
        builder.AddAttribute(17, "class", "card-body");

        builder.OpenElement(18, "h5");
        builder.AddAttribute(19, "class", "card-title");
        builder.AddContent(20, project.Name);
        builder.CloseElement();

        builder.OpenElement(21, "p");
        builder.AddAttribute(22, "class", "card-text text-truncate mb-3");
        builder.AddContent(23, project.Description);
        builder.CloseElement();

        builder.OpenElement(24, "div");
        builder.AddAttribute(25, "class", "d-flex justify-content-between align-items-center");

        builder.OpenElement(26, "div");
        builder.AddAttribute(27, "class", "project-budget");
        builder.AddContent(28, $"{project.TotalBudget.ToString("N0")} ل.س");
        builder.CloseElement();

        builder.OpenElement(29, "small");
        builder.AddAttribute(30, "class", "text-muted");
        builder.AddContent(31, FormatDate(project.CreatedDate));
        builder.CloseElement();

        builder.CloseElement();

        builder.CloseElement(); // Close card body

        // Card footer
        builder.OpenElement(32, "div");
        builder.AddAttribute(33, "class", "card-footer text-center");

        builder.OpenElement(34, "a");
        builder.AddAttribute(35, "href", $"/project-details/{project.Id}");
        builder.AddAttribute(36, "class", "btn btn-primary w-100");
        builder.AddContent(37, "عرض التفاصيل");
        builder.CloseElement();

        builder.CloseElement(); // Close card footer

        builder.CloseElement(); // Close card
    };

    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Planned" => "bg-info",
            "InProgress" => "bg-primary",
            "Completed" => "bg-success",
            _ => "bg-secondary"
        };
    }

    private string GetStatusArabic(string status)
    {
        return status switch
        {
            "Planned" => "مخطط",
            "InProgress" => "قيد التنفيذ",
            "Completed" => "مكتمل",
            _ => status
        };
    }

    private string FormatDate(DateTime date)
    {
        return date.ToString("yyyy-MM-dd");
    }
}