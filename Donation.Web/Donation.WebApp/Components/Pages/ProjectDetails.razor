@page "/project-details/{id:long}"
@using Dashboard.Core.ProjectAggregate
@using Donation.Web.Services
@inject ProjectServicePublic ProjectService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<section class="main-section project-details-section">
    @if (loading)
    {
        <div class="loading-container">
            <div class="loading-spinner">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="loading-text">جاري تحميل تفاصيل المشروع...</p>
            </div>
        </div>
    }
    else if (project == null)
    {
        <div class="error-container">
            <div class="error-content">
                <i class="bi bi-exclamation-triangle"></i>
                <h3>لم يتم العثور على المشروع</h3>
                <p>قد يكون المشروع غير موجود أو تم حذفه.</p>
                <a href="/projects" class="btn btn-mata">العودة إلى المشاريع</a>
            </div>
        </div>
    }
    else
    {
        <div class="container-fluid project-container">
            <!-- Hero Section -->
            <div class="project-hero">
                <div class="hero-background">
                    @if (project.Images != null && project.Images.Any())
                    {
                        <img src="@project.Images.First()" class="hero-image" alt="@project.Name" />
                    }
                    <div class="hero-overlay"></div>
                </div>
                <div class="hero-content">
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-8">
                                <div class="project-header">
                                    <div class="project-status-badge">
                                        <span class="status-badge @GetStatusBadgeClass(project.Status.ToString())">
                                            <i class="@GetStatusIcon(project.Status.ToString())"></i>
                                            @project.StatusText
                                        </span>
                                    </div>
                                    <h1 class="project-title">@project.Name</h1>
                                    <div class="project-meta-info">
                                        <div class="meta-item">
                                            <i class="bi bi-calendar-event"></i>
                                            <span>تاريخ البدء: @FormatDate(project.CreatedDate)</span>
                                        </div>
                                        @if (project.CompletedDate.HasValue)
                                        {
                                            <div class="meta-item">
                                                <i class="bi bi-calendar-check"></i>
                                                <span>تاريخ الإنجاز: @FormatDate(project.CompletedDate.Value)</span>
                                            </div>
                                        }
                                        <div class="meta-item">
                                            <i class="bi bi-cash-coin"></i>
                                            <span class="budget-highlight">@project.TotalBudget.ToString("N0") @Currency</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="container project-content">
                <div class="row">
                    <!-- Left Side: Description and Details -->
                    <div class="col-lg-8 order-lg-1 order-2">
                        <div class="content-section">
                            <div class="section-card description-card">
                                <div class="card-header">
                                    <h3><i class="bi bi-file-text"></i> وصف المشروع</h3>
                                </div>
                                <div class="card-body">
                                    <p class="project-description">@(string.IsNullOrEmpty(project.Description) ? "لا يوجد وصف متاح" : project.Description)</p>

                                    @if (!string.IsNullOrEmpty(project.AdditionalText))
                                    {
                                        <div class="additional-info">
                                            <h4><i class="bi bi-info-circle"></i> معلومات إضافية</h4>
                                            <p>@project.AdditionalText</p>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Project Timeline -->
                            <div class="section-card timeline-card">
                                <div class="card-header">
                                    <h3><i class="bi bi-clock-history"></i> مراحل المشروع</h3>
                                </div>
                                <div class="card-body">
                                    <div class="project-timeline">
                                        <div class="timeline-item @(project.Status.ToString() == "Planned" ? "active" : "completed")">
                                            <div class="timeline-marker"></div>
                                            <div class="timeline-content">
                                                <h5>مخطط</h5>
                                                <p>@FormatDate(project.CreatedDate)</p>
                                            </div>
                                        </div>
                                        <div class="timeline-item @(project.Status.ToString() == "InProgress" ? "active" : (project.Status.ToString() == "Completed" ? "completed" : ""))">
                                            <div class="timeline-marker"></div>
                                            <div class="timeline-content">
                                                <h5>قيد التنفيذ</h5>
                                                <p>@(project.Status.ToString() == "InProgress" || project.Status.ToString() == "Completed" ? "جاري العمل" : "في الانتظار")</p>
                                            </div>
                                        </div>
                                        <div class="timeline-item @(project.Status.ToString() == "Completed" ? "completed" : "")">
                                            <div class="timeline-marker"></div>
                                            <div class="timeline-content">
                                                <h5>مكتمل</h5>
                                                <p>@(project.CompletedDate.HasValue ? FormatDate(project.CompletedDate.Value) : "غير مكتمل بعد")</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Right Side: Budget and Actions -->
                    <div class="col-lg-4 order-lg-2 order-1 mb-4">
                        <div class="sidebar-content">
                            <!-- Budget Card -->
                            <div class="section-card budget-card">
                                <div class="card-header">
                                    <h3><i class="bi bi-calculator"></i> الميزانية</h3>
                                    <div class="budget-total">
                                        @project.TotalBudget.ToString("N0") @Currency
                                    </div>
                                </div>
                                <div class="card-body">
                                    @if (project.Expenses != null && project.Expenses.Any())
                                    {
                                        <div class="expenses-list">
                                            @foreach (var expense in project.Expenses)
                                            {
                                                <div class="expense-item">
                                                    <div class="expense-info">
                                                        <span class="expense-name">@expense.Name</span>
                                                        <span class="expense-amount">@expense.Value.ToString("N0") @Currency</span>
                                                    </div>
                                                    <div class="expense-progress">
                                                        <div class="progress">
                                                            <div class="progress-bar" style="width: @(((double)expense.Value / (double)project.TotalBudget) * 100)%"></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="no-expenses">
                                            <i class="bi bi-inbox"></i>
                                            <p>لا توجد مصاريف مسجلة</p>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Action Card -->
                            <div class="section-card action-card">
                                <div class="card-body text-center">
                                    <i class="bi bi-heart-fill action-icon"></i>
                                    <h4>ساهم في المشاريع القادمة</h4>
                                    <p>مساهمتك تساعدنا في تنفيذ المزيد من المشاريع لخدمة مدينتنا الحبيبة</p>
                                    <a href="/#contribute" class="btn btn-contribute">ساهم الآن</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Media Sections -->
                @if ((project.Videos != null && project.Videos.Any()) || (project.Images != null && project.Images.Any()))
                {
                    <div class="media-section">
                        <!-- Videos Section -->
                        @if (project.Videos != null && project.Videos.Any())
                        {
                            <div class="section-card media-card">
                                <div class="card-header">
                                    <h3><i class="bi bi-play-circle"></i> فيديوهات المشروع</h3>
                                </div>
                                <div class="card-body">
                                    <div class="videos-grid">
                                        @if (project.Videos.Count == 1)
                                        {
                                            <div class="single-video">
                                                @if (IsYoutubeUrl(project.Videos.First()))
                                                {
                                                    <div class="video-container">
                                                        <iframe src="@GetYoutubeEmbedUrl(project.Videos.First())"
                                                                title="YouTube video player"
                                                                frameborder="0"
                                                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                                                allowfullscreen></iframe>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="video-link">
                                                        <a href="@project.Videos.First()" target="_blank" class="btn btn-video">
                                                            <i class="bi bi-play-circle"></i>
                                                            مشاهدة الفيديو
                                                        </a>
                                                    </div>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="row">
                                                @foreach (var video in project.Videos)
                                                {
                                                    @if (!string.IsNullOrEmpty(video))
                                                    {
                                                        <div class="col-md-6 mb-3">
                                                            @if (IsYoutubeUrl(video))
                                                            {
                                                                <div class="video-container">
                                                                    <iframe src="@GetYoutubeEmbedUrl(video)"
                                                                            title="YouTube video player"
                                                                            frameborder="0"
                                                                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                                                            allowfullscreen></iframe>
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="video-link">
                                                                    <a href="@video" target="_blank" class="btn btn-video">
                                                                        <i class="bi bi-play-circle"></i>
                                                                        مشاهدة الفيديو
                                                                    </a>
                                                                </div>
                                                            }
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }

                        <!-- Images Section -->
                        @if (project.Images != null && project.Images.Any())
                        {
                            <div class="section-card media-card">
                                <div class="card-header">
                                    <h3><i class="bi bi-images"></i> صور المشروع</h3>
                                </div>
                                <div class="card-body">
                                    <div class="images-gallery">
                                        @foreach (var image in project.Images)
                                        {
                                            @if (!string.IsNullOrEmpty(image))
                                            {
                                                <div class="gallery-item" @onclick="@(() => OpenImageModal(image))">
                                                    <img src="@image" alt="صورة المشروع" />
                                                    <div class="gallery-overlay">
                                                        <i class="bi bi-arrows-fullscreen"></i>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }

                <!-- Back Button -->
                <div class="back-section text-center">
                    <a href="/projects" class="btn btn-back">
                        <i class="bi bi-arrow-right"></i>
                        العودة إلى المشاريع
                    </a>
                </div>
            </div>
        </div>
    }
</section>

<!-- Image Modal -->
@if (showImageModal)
{
    <div class="image-modal-backdrop" @onclick="CloseImageModal">
        <div class="image-modal" @onclick:stopPropagation="true">
            <div class="image-modal-header">
                <button type="button" class="btn-close" @onclick="CloseImageModal">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>
            <div class="image-modal-body">
                <img src="@currentImage" alt="صورة موسعة" />
            </div>
        </div>
    </div>
}

<style>
    html, body, .main-section, .form-section, .modal, .modal-content, .container {
        direction: rtl !important;
        text-align: right !important;
    }

    .project-details-section {
        padding-top: 100px;
        background: #f8f9fa;
        min-height: 100vh;
    }

    /* Loading State */
    .loading-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 60vh;
    }

    .loading-spinner {
        text-align: center;
    }

    .loading-text {
        margin-top: 20px;
        color: #666;
        font-size: 1.1rem;
    }

    /* Error State */
    .error-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 60vh;
    }

    .error-content {
        text-align: center;
        color: #666;
    }

        .error-content i {
            font-size: 4rem;
            color: #ffc107;
            margin-bottom: 20px;
        }

        .error-content h3 {
            margin-bottom: 15px;
            color: #555;
        }

    /* Hero Section */
    .project-hero {
        position: relative;
        height: 400px;
        overflow: hidden;
        border-radius: 20px;
        margin-bottom: 40px;
    }

    .hero-background {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    .hero-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .hero-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, rgba(67, 147, 111, 0.8) 0%, rgba(0, 0, 0, 0.6) 100%);
    }

    .hero-content {
        position: relative;
        z-index: 2;
        height: 100%;
        display: flex;
        align-items: center;
        color: white;
    }

    .project-header {
        padding: 40px 0;
    }

    .project-status-badge {
        margin-bottom: 20px;
    }

    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 12px 20px;
        border-radius: 25px;
        font-weight: 600;
        font-size: 0.9rem;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .project-title {
        font-size: 3rem;
        font-weight: 700;
        margin-bottom: 20px;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    }

    .project-meta-info {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 1rem;
    }

        .meta-item i {
            font-size: 1.1rem;
        }

    .budget-highlight {
        font-weight: 700;
        font-size: 1.1rem;
        color: #ffd700;
    }

    /* Content Sections */
    .project-content {
        margin-top: -20px;
        position: relative;
        z-index: 3;
    }

    .section-card {
        background: white;
        border-radius: 16px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
        margin-bottom: 30px;
        overflow: hidden;
        border: 1px solid rgba(0, 0, 0, 0.05);
    }

        .section-card .card-header {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            padding: 20px 24px;
        }

            .section-card .card-header h3 {
                margin: 0;
                font-size: 1.3rem;
                font-weight: 600;
                color: #2c3e50;
                display: flex;
                align-items: center;
                gap: 10px;
            }

                .section-card .card-header h3 i {
                    color: var(--bs-primary);
                }

        .section-card .card-body {
            padding: 24px;
        }

    /* Description Card */
    .project-description {
        font-size: 1.1rem;
        line-height: 1.8;
        color: #555;
        margin-bottom: 20px;
    }

    .additional-info {
        padding-top: 20px;
        border-top: 1px solid rgba(0, 0, 0, 0.1);
    }

        .additional-info h4 {
            font-size: 1.1rem;
            color: var(--bs-primary);
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .additional-info p {
            color: #666;
            line-height: 1.6;
        }

    /* Timeline */
    .project-timeline {
        position: relative;
        padding: 20px 0;
    }

        .project-timeline::before {
            content: '';
            position: absolute;
            right: 20px;
            top: 0;
            bottom: 0;
            width: 3px;
            background: linear-gradient(180deg, var(--bs-primary) 0%, #ddd 100%);
        }

    .timeline-item {
        position: relative;
        padding: 0 0 30px 60px;
        margin-bottom: 20px;
    }

        .timeline-item:last-child {
            margin-bottom: 0;
        }

    .timeline-marker {
        position: absolute;
        right: 8px;
        top: 5px;
        width: 18px;
        height: 18px;
        border-radius: 50%;
        background: #ddd;
        border: 3px solid white;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

    .timeline-item.active .timeline-marker {
        background: var(--bs-primary);
        animation: pulse 2s infinite;
    }

    .timeline-item.completed .timeline-marker {
        background: #28a745;
    }

    .timeline-content h5 {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 5px;
    }

    .timeline-content p {
        color: #666;
        margin: 0;
        font-size: 0.9rem;
    }

    /* Budget Card */
    .budget-card .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .budget-total {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--bs-primary);
        background: rgba(67, 147, 111, 0.1);
        padding: 8px 16px;
        border-radius: 10px;
    }

    .expenses-list {
        max-height: 300px;
        overflow-y: auto;
    }

    .expense-item {
        padding: 15px 0;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }

        .expense-item:last-child {
            border-bottom: none;
        }

    .expense-info {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 8px;
    }

    .expense-name {
        font-weight: 600;
        color: #2c3e50;
    }

    .expense-amount {
        font-weight: 700;
        color: var(--bs-primary);
    }

    .expense-progress .progress {
        height: 6px;
        background-color: #f0f0f0;
        border-radius: 3px;
    }

    .expense-progress .progress-bar {
        background: linear-gradient(90deg, var(--bs-primary), #3a805f);
        border-radius: 3px;
        transition: width 0.3s ease;
    }

    .no-expenses {
        text-align: center;
        padding: 40px 20px;
        color: #999;
    }

        .no-expenses i {
            font-size: 3rem;
            margin-bottom: 15px;
        }

    /* Action Card */
    .action-card {
        background: linear-gradient(135deg, #f7f4d5 0%, #ede3a3 100%);
        border: none;
    }

        .action-card .card-body {
            padding: 30px 24px;
        }

    .action-icon {
        font-size: 3rem;
        color: var(--bs-primary);
        margin-bottom: 20px;
    }

    .btn-contribute {
        background: linear-gradient(135deg, var(--bs-primary), #3a805f);
        color: white;
        border: none;
        border-radius: 25px;
        padding: 12px 30px;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 5px 15px rgba(67, 147, 111, 0.3);
    }

        .btn-contribute:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(67, 147, 111, 0.4);
            color: white;
        }

    /* Media Section */
    .media-section {
        margin-top: 40px;
    }

    .video-container {
        position: relative;
        width: 100%;
        height: 0;
        padding-bottom: 56.25%;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
    }

        .video-container iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

    .single-video .video-container {
        padding-bottom: 45%;
        max-width: 800px;
        margin: 0 auto;
    }

    .video-link {
        text-align: center;
        padding: 40px 20px;
        background: rgba(67, 147, 111, 0.05);
        border-radius: 12px;
    }

    .btn-video {
        background: var(--bs-primary);
        color: white;
        border: none;
        border-radius: 25px;
        padding: 15px 30px;
        font-weight: 600;
        font-size: 1.1rem;
        transition: all 0.3s ease;
    }

        .btn-video:hover {
            background: #3a805f;
            transform: translateY(-2px);
            color: white;
        }

        .btn-video i {
            margin-left: 10px;
            font-size: 1.2em;
        }

    /* Images Gallery */
    .images-gallery {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
    }

    .gallery-item {
        position: relative;
        height: 200px;
        border-radius: 12px;
        overflow: hidden;
        cursor: pointer;
        transition: transform 0.3s ease;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

        .gallery-item:hover {
            transform: scale(1.05);
        }

        .gallery-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .gallery-item:hover img {
            transform: scale(1.1);
        }

    .gallery-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

        .gallery-overlay i {
            color: white;
            font-size: 2rem;
        }

    .gallery-item:hover .gallery-overlay {
        opacity: 1;
    }

    /* Image Modal */
    .image-modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.9);
        z-index: 1050;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
    }

    .image-modal {
        max-width: 90%;
        max-height: 90%;
        background: white;
        border-radius: 12px;
        overflow: hidden;
        position: relative;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
    }

    .image-modal-header {
        position: absolute;
        top: 15px;
        left: 15px;
        z-index: 10;
    }

    .btn-close {
        background: rgba(0, 0, 0, 0.7);
        color: white;
        border: none;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
    }

        .btn-close:hover {
            background: rgba(0, 0, 0, 0.9);
            transform: scale(1.1);
        }

    .image-modal-body {
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .image-modal-body img {
            max-width: 100%;
            max-height: 80vh;
            object-fit: contain;
        }

    /* Back Button */
    .back-section {
        margin: 40px 0;
    }

    .btn-back {
        background: #6c757d;
        color: white;
        border: none;
        border-radius: 25px;
        padding: 12px 25px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

        .btn-back:hover {
            background: #5a6268;
            transform: translateY(-2px);
            color: white;
        }

        .btn-back i {
            margin-left: 8px;
        }

    /* Status Badge Classes */
    .bg-status-planned {
        background: linear-gradient(135deg, #17a2b8, #138496);
    }

    .bg-status-inprogress {
        background: linear-gradient(135deg, #007bff, #0056b3);
    }

    .bg-status-completed {
        background: linear-gradient(135deg, #28a745, #1e7e34);
    }

    /* Animations */
    @@keyframes pulse {
        0%, 100%

    {
        transform: scale(1);
    }

    50% {
        transform: scale(1.2);
    }

    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .project-hero

    {
        height: 300px;
    }

    .project-title {
        font-size: 2rem;
    }

    .project-meta-info {
        flex-direction: column;
        gap: 10px;
    }

    .section-card .card-header,
    .section-card .card-body {
        padding: 16px;
    }

    .images-gallery {
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 15px;
    }

    .gallery-item {
        height: 150px;
    }

    }

    @@media (max-width: 576px) {
        .project-title

    {
        font-size: 1.6rem;
    }

    .project-details-section {
        padding-top: 80px;
    }

    .images-gallery {
        grid-template-columns: 1fr 1fr;
    }

    }
</style>

@code {
    [Parameter] public long Id { get; set; }

    private ProjectDTO project;
    private bool loading = true;
    private bool showImageModal = false;
    private string currentImage = "";
    private string Currency = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadProject();
        if (project?.Expenses?.FirstOrDefault()?.CurrencyCode == "USD")
        {
            Currency = "$";
        }
        else
        {
            Currency = "ل.س";
        }
    }

    private async Task LoadProject()
    {
        loading = true;
        try
        {
            project = await ProjectService.GetProjectByIdAsync(Id);

            if (project != null)
            {
                project.Images ??= new List<string>();
                project.Videos ??= new List<string>();
                project.Expenses ??= new List<ExpenseDTO>();

                project.Images = project.Images.Where(img => !string.IsNullOrEmpty(img)).ToList();
                project.Videos = project.Videos.Where(vid => !string.IsNullOrEmpty(vid)).ToList();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading project: {ex.Message}");
        }
        finally
        {
            loading = false;
        }
    }

    private void OpenImageModal(string imageUrl)
    {
        currentImage = imageUrl;
        showImageModal = true;
        StateHasChanged();
    }

    private void CloseImageModal()
    {
        showImageModal = false;
        StateHasChanged();
    }

    private string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "planned" => "bg-status-planned",
            "inprogress" => "bg-status-inprogress",
            "completed" => "bg-status-completed",
            _ => "bg-secondary"
        };
    }

    private string GetStatusText(string status)
    {
        return status?.ToLower() switch
        {
            "planned" => "مخطط",
            "inprogress" => "قيد التنفيذ",
            "completed" => "مكتمل",
            _ => status ?? "غير محدد"
        };
    }

    private string GetStatusIcon(string status)
    {
        return status?.ToLower() switch
        {
            "planned" => "bi-calendar-check",
            "inprogress" => "bi-gear-fill",
            "completed" => "bi-check-circle-fill",
            _ => "bi-question-circle"
        };
    }

    private string FormatDate(DateTime date)
    {
        return date.ToString("yyyy-MM-dd");
    }

    private bool IsYoutubeUrl(string url)
    {
        if (string.IsNullOrEmpty(url)) return false;
        return url.Contains("youtube.com") || url.Contains("youtu.be");
    }

    private string GetYoutubeEmbedUrl(string url)
    {
        try
        {
            if (string.IsNullOrEmpty(url)) return "";

            if (url.Contains("youtube.com/watch"))
            {
                var uri = new Uri(url);
                var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
                var videoId = query["v"];
                return $"https://www.youtube.com/embed/{videoId}";
            }
            else if (url.Contains("youtu.be"))
            {
                var uri = new Uri(url);
                var path = uri.AbsolutePath.Trim('/');
                return $"https://www.youtube.com/embed/{path}";
            }

            return url;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error parsing YouTube URL: {ex.Message}");
            return "";
        }
    }
}