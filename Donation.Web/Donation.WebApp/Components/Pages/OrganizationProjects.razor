@page "/organization-projects"
@using Dashboard.Core.ProjectAggregate
@using Donation.Web.Services
@inject ProjectServicePublic ProjectService
@inject NavigationManager NavigationManager

<section class="main-section organization-projects-page" style="padding-top: 0 !important;">
    <div class="centerized-box">
        <div class="section-header text-center">
            <div class="header-decoration">
                <i class="bi bi-building"></i>
            </div>
            <h1 class="section-title">
                <span class="r"><span class="text-primary">مشاريع </span> <span class="text-secondary">المنظمات</span></span>
            </h1>
            <p class="lead section-subtitle">
                مشاريع منفذة من قبل المنظمات الخيرية والداعمة لمدينتنا الحبيبة، نقوم بعرضها هنا للشفافية والمساءلة.
            </p>
            <div class="section-decoration">
                <span></span><i class="bi bi-heart-fill"></i><span></span>
            </div>
        </div>

        @if (loading)
        {
            <div class="loading-state">
                <div class="loading-spinner">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <div class="loading-dots">
                        <span></span><span></span><span></span>
                    </div>
                </div>
                <p class="loading-text">جاري تحميل مشاريع المنظمات...</p>
            </div>
        }
        else if (!projects.Any())
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="bi bi-building-x"></i>
                </div>
                <h4>لا توجد مشاريع منظمات حالياً</h4>
                <p>سيتم عرض مشاريع المنظمات هنا بمجرد إضافتها. نحن نعمل على توثيق وعرض جميع المشاريع الخيرية في المنطقة.</p>
                <div class="empty-actions">
                    <a href="/projects" class="btn btn-outline-primary">تصفح المشاريع العامة</a>
                </div>
            </div>
        }
        else
        {
 

            <div class="projects-grid">
                <div class="row">
                    @foreach (var (project, index) in projects.Select((p, i) => (p, i)))
                    {
                        var Currency = project?.Expenses?.FirstOrDefault()?.CurrencyCode == "USD" ? "$" : "ل.س";

                        <div class="col-md-6 col-lg-6 mb-4" data-aos="fade-up" data-aos-delay="@(index * 100)">
                            <div class="project-card organization-card">
                                <!-- Organization Badge -->
                                <div class="organization-badge">
                                    <i class="bi bi-building-check"></i>
                                    <span>منظمة</span>
                                </div>

                                <!-- Card Image -->
                                <div class="project-card-image">
                                    @if (project.Images != null && project.Images.Any())
                                    {
                                        <img src="@project.Images.First()" class="project-thumbnail" alt="@project.Name" />
                                    }
                                    else
                                    {
                                        <div class="project-thumbnail-placeholder">
                                            <i class="bi bi-image"></i>
                                            <p>لا توجد صورة</p>
                                        </div>
                                    }

                                    <!-- Status Badge -->
                                    <div class="project-status">
                                        <span class="status-badge @GetStatusBadgeClass(project.Status.ToString())">
                                            <i class="@GetStatusIcon(project.Status.ToString())"></i>
                                            @project.StatusText
                                        </span>
                                    </div>
                                    <div class="project-overlay"></div>
                                </div>

                                <!-- Card Body -->
                                <div class="project-card-body">
                                    <h5 class="project-title">@project.Name</h5>
                                    <p class="project-description">@(project.Description?.Length > 120 ? project.Description.Substring(0, 120) + "..." : project.Description)</p>

                                    <!-- Project Features -->
                                    <div class="project-features">
                                        @if (project.Videos != null && project.Videos.Any())
                                        {
                                            <div class="feature-badge">
                                                <i class="bi bi-play-circle"></i>
                                                <span>فيديو</span>
                                            </div>
                                        }
                                        @if (project.Images != null && project.Images.Count > 1)
                                        {
                                            <div class="feature-badge">
                                                <i class="bi bi-images"></i>
                                                <span>@project.Images.Count صور</span>
                                            </div>
                                        }
                                        @if (project.Expenses != null && project.Expenses.Any())
                                        {
                                            <div class="feature-badge">
                                                <i class="bi bi-receipt"></i>
                                                <span>@project.Expenses.Count بند</span>
                                            </div>
                                        }
                                    </div>

                                    <div class="project-meta">
                                        <div class="project-budget">
                                            <i class="bi bi-cash-coin"></i>
                                            @if (project.TotalBudget > 0)
                                            {
                                                @($"{project.TotalBudget.ToString("N0")} {Currency}")
                                            }
                                            else
                                            {
                                                @("تطوع")
                                            }
                                        </div>
                                        <div class="project-date">
                                            <i class="bi bi-calendar-event"></i>
                                            @FormatDate(project.CreatedDate)
                                        </div>
                                    </div>

                                    <!-- Progress Indicator -->
                                    <div class="project-progress">
                                        <div class="progress-info">
                                            <small>مرحلة التنفيذ</small>
                                            <small>@GetProgressPercentage(project.Status.ToString())%</small>
                                        </div>
                                        <div class="progress">
                                            <div class="progress-bar @GetProgressBarClass(project.Status.ToString())"
                                                 style="width: @GetProgressPercentage(project.Status.ToString())%"></div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Card Footer -->
                                <div class="project-card-footer">
                                    <a href="/project-details/@project.Id" class="btn btn-project-org">
                                        <span>استكشف المشروع</span>
                                        <i class="bi bi-arrow-left-short"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <div class="action-section">
            <div class="cta-card">
                <div class="cta-content">
                    <h3>هل أنت منظمة وتريد عرض مشاريعك؟</h3>
                    <p>نحن نرحب بجميع المنظمات الخيرية لعرض مشاريعها وزيادة الشفافية في العمل الخيري</p>
                    <div class="cta-actions">
                        <a href="/#contribute" class="btn btn-mata">ساهم في المشاريع</a>
                        <a href="/projects" class="btn btn-outline-primary">تصفح المشاريع العامة</a>
                    </div>
                </div>
                <div class="cta-illustration">
                    <i class="bi bi-people-fill"></i>
                </div>
            </div>
        </div>
    </div>
</section>
 

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Enhanced AOS Animation
        const animatedElements = document.querySelectorAll('[data-aos]');

        const observer = new IntersectionObserver((entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    const delay = entry.target.getAttribute('data-aos-delay') || 0;
                    setTimeout(() => {
                        entry.target.classList.add('aos-animate');
                    }, delay);
                }
            });
        }, {
            threshold: 0.1,
            rootMargin: '50px'
        });

        animatedElements.forEach(el => {
            observer.observe(el);
        });

        // Stat counter animation
        const statCards = document.querySelectorAll('.stat-card h3');
        statCards.forEach(stat => {
            const targetNumber = parseInt(stat.textContent.replace(/,/g, ''));
            if (!isNaN(targetNumber)) {
                animateCounter(stat, targetNumber);
            }
        });
    });

    function animateCounter(element, target) {
        let current = 0;
        const increment = target / 100;
        const timer = setInterval(() => {
            current += increment;
            if (current >= target) {
                current = target;
                clearInterval(timer);
            }
            element.textContent = Math.floor(current).toLocaleString();
        }, 20);
    }
</script>

@code {
    private List<ProjectDTO> projects = new List<ProjectDTO>();
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadProjects();
    }

    private async Task LoadProjects()
    {
        loading = true;
        try
        {
            // Get all projects - in a real implementation, you might filter by organization type
            var allProjects = await ProjectService.GetProjectsByTypeAsync(ProjectType.Organization);
            projects = allProjects ?? new List<ProjectDTO>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading projects: {ex.Message}");
        }
        finally
        {
            loading = false;
        }
    }

    private string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "planned" => "bg-status-planned",
            "inprogress" => "bg-status-inprogress",
            "completed" => "bg-status-completed",
            _ => "bg-secondary"
        };
    }

    private string GetStatusText(string status)
    {
        return status?.ToLower() switch
        {
            "planned" => "مخطط",
            "inprogress" => "قيد التنفيذ",
            "completed" => "مكتمل",
            _ => status ?? "غير محدد"
        };
    }

    private string GetStatusIcon(string status)
    {
        return status?.ToLower() switch
        {
            "planned" => "bi-calendar-check",
            "inprogress" => "bi-gear-fill",
            "completed" => "bi-check-circle-fill",
            _ => "bi-question-circle"
        };
    }

    private int GetProgressPercentage(string status)
    {
        return status?.ToLower() switch
        {
            "planned" => 25,
            "inprogress" => 60,
            "completed" => 100,
            _ => 0
        };
    }

    private string GetProgressBarClass(string status)
    {
        return status?.ToLower() switch
        {
            "planned" => "bg-info",
            "inprogress" => "bg-primary",
            "completed" => "bg-success",
            _ => "bg-secondary"
        };
    }

    private string FormatDate(DateTime date)
    {
        return date.ToString("yyyy-MM-dd");
    }
}