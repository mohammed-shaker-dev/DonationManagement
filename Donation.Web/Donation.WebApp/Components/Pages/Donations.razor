@page "/donations"
@rendermode InteractiveServer
@using Dashboard.Core.DTOs
@using Donation.Web.Services
@inject DonationService DonationService

<PageTitle>سجل المساهمات - اللاذقية نحن أهلها</PageTitle>

<LoadingComponent IsLoading="isLoading" LoadingMessage="جاري تحميل سجلات المساهمات..." />

@if (!isLoading)
{
    <section class="main-section donations-section">
        <div class="centerized-box">
            <span class="hashtag">#شفافية_المساهمات</span>
            <h1>
                <span class="r"><span class="text-primary">سجل </span> <span class="text-secondary">التبرعات</span></span>
                <span class="r">شفافية كاملة في كل ريال</span>
            </h1>
            <p class="lead">
                نؤمن بالشفافية الكاملة، لذلك نعرض عليكم جميع المساهمات المستلمة<br />
                مع الحفاظ على خصوصية المساهمين الكرام
            </p>
        </div>
    </section>

    <section class="donations-content-section">
        <div class="container">
            @if (wallets != null && wallets.Any())
            {
                <!-- Summary Cards -->
                <div class="donations-summary mb-5">
                    <div class="row">
                        @foreach (var wallet in wallets.Where(w => w.DepositAmount?.Amount > 0))
                        {
                            <div class="col-lg-6 mb-4">
                                <div class="summary-card">
                                    <div class="summary-header">
                                        <div class="currency-icon">
                                            @if (wallet.Currency.Code == "USD")
                                            {
                                                <i class="bi bi-currency-dollar"></i>
                                            }
                                            else
                                            {
                                                <span class="currency-text">ل.س</span>
                                            }
                                        </div>
                                        <div class="summary-info">
                                            <h3>محفظة @wallet.Currency.Code</h3>
                                            <p class="total-amount">@wallet.DepositAmount.Amount.ToString("N0") @wallet.Currency.Code</p>
                                            <small class="donations-count">@wallet.Transactions.Count(t => t.TransactionType == SharedKernel.Enums.TransactionType.IN) تبرع</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Detailed Donations -->
                @foreach (var wallet in wallets.Where(w => w.DepositAmount?.Amount > 0))
                {
                    var donations = wallet.Transactions.Where(t => t.TransactionType == SharedKernel.Enums.TransactionType.IN)
                    .OrderByDescending(t => t.CreatedDate).ToList();

                    if (donations.Any())
                    {
                        <div class="wallet-section mb-5">
                            <div class="wallet-header">
                                <div class="d-flex align-items-center justify-content-between">
                                    <div class="d-flex align-items-center">
                                        <div class="wallet-icon me-3">
                                            @if (wallet.Currency.Code == "USD")
                                            {
                                                <i class="bi bi-currency-dollar"></i>
                                            }
                                            else
                                            {
                                                <span class="currency-text">ل.س</span>
                                            }
                                        </div>
                                        <div>
                                            <h2>تبرعات محفظة @(wallet.Currency.Code == "USD"?"الدولار":"الليرة السورية")</h2>
                                            <p class="mb-0">إجمالي التبرعات: <strong>@wallet.DepositAmount.Amount.ToString("N0") @wallet.Currency.Code</strong></p>
                                        </div>
                                    </div>
                                    <div class="donations-badge">
                                        @donations.Count تبرع
                                    </div>
                                </div>
                            </div>

                            <div class="donations-grid">
                                <div class="table-container">
                                    <table class="donations-table">
                                        <thead>
                                            <tr>
                                                <th>كود التبرع</th>
                                                <th>المبلغ</th>
                                                <th>التاريخ</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var donation in donations)
                                            {
                                                <tr>
                                                    <td>
                                                        <div class="donation-code">
                                                            <i class="bi bi-receipt"></i>
                                                            <span>@donation.Code</span>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div class="donation-amount">
                                                            @donation.Amount.ToString("N0") @wallet.Currency.Code
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div class="donation-date">
                                                            <i class="bi bi-calendar3"></i>
                                                            <span>@donation.CreatedDate.ToString("yyyy/MM/dd")</span>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    }
                }
            }
            else
            {
                <div class="no-donations">
                    <div class="text-center py-5">
                        <i class="bi bi-heart display-1 text-muted mb-3"></i>
                        <h3>لا توجد تبرعات بعد</h3>
                        <p class="text-muted">سيظهر سجل التبرعات هنا بمجرد استلام أول تبرع</p>
                        <a href="/#contribute" class="btn btn-mata mt-3">كن أول المتبرعين</a>
                    </div>
                </div>
            }
        </div>
    </section>
}

 

@code {
    private bool isLoading = true;
    private List<WalletDTO> wallets = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            wallets = await DonationService.GetAllDepositAsync() ?? new List<WalletDTO>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading donations: {ex.Message}");
            wallets = new List<WalletDTO>();
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}