@page "/donation-projects"
 
@using Dashboard.Core.ProjectAggregate
@using Donation.Web.Services
@inject ProjectServicePublic ProjectService
@inject NavigationManager NavigationManager

<section class="main-section organization-projects-page">
    <div class="centerized-box">
        <div class="section-header text-center">
            <div class="header-decoration">
                <i class="bi bi-building"></i>
            </div>
            <h1 class="section-title">
                <span class="r"><span class="text-primary">مشاريع </span> <span class="text-secondary">المنظمات</span></span>
            </h1>
            <p class="lead section-subtitle">
                مشاريع منفذة من قبل المنظمات الخيرية والداعمة لمدينتنا الحبيبة، نقوم بعرضها هنا للشفافية والمساءلة.
            </p>
            <div class="section-decoration">
                <span></span><i class="bi bi-heart-fill"></i><span></span>
            </div>
        </div>

        @if (loading)
        {
            <div class="loading-state">
                <div class="loading-spinner">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <div class="loading-dots">
                        <span></span><span></span><span></span>
                    </div>
                </div>
                <p class="loading-text">جاري تحميل مشاريع المنظمات...</p>
            </div>
        }
        else if (!projects.Any())
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="bi bi-building-x"></i>
                </div>
                <h4>لا توجد مشاريع منظمات حالياً</h4>
                <p>سيتم عرض مشاريع المنظمات هنا بمجرد إضافتها. نحن نعمل على توثيق وعرض جميع المشاريع الخيرية في المنطقة.</p>
                <div class="empty-actions">
                    <a href="/projects" class="btn btn-outline-primary">تصفح المشاريع العامة</a>
                </div>
            </div>
        }
        else
        {


            <div class="projects-grid">
                <div class="row">
                    @foreach (var (project, index) in projects.Select((p, i) => (p, i)))
                    {
                        var Currency = project?.Expenses?.FirstOrDefault()?.CurrencyCode == "USD" ? "$" : "ل.س";

                        <div class="col-md-6 col-lg-4 mb-4" data-aos="fade-up" data-aos-delay="@(index * 100)">
                            <div class="project-card organization-card">
                                <!-- Organization Badge -->
                                <div class="organization-badge">
                                    <i class="bi bi-building-check"></i>
                                    <span>منظمة</span>
                                </div>

                                <!-- Card Image -->
                                <div class="project-card-image">
                                    @if (project.Images != null && project.Images.Any())
                                    {
                                        <img src="@project.Images.First()" class="project-thumbnail" alt="@project.Name" />
                                    }
                                    else
                                    {
                                        <div class="project-thumbnail-placeholder">
                                            <i class="bi bi-image"></i>
                                            <p>لا توجد صورة</p>
                                        </div>
                                    }

                                    <!-- Status Badge -->
                                    <div class="project-status">
                                        <span class="status-badge @GetStatusBadgeClass(project.Status.ToString())">
                                            <i class="@GetStatusIcon(project.Status.ToString())"></i>
                                            @project.StatusText
                                        </span>
                                    </div>
                                    <div class="project-overlay"></div>
                                </div>

                                <!-- Card Body -->
                                <div class="project-card-body">
                                    <h5 class="project-title">@project.Name</h5>
                                    <p class="project-description">@(project.Description?.Length > 120 ? project.Description.Substring(0, 120) + "..." : project.Description)</p>

                                    <!-- Project Features -->
                                    <div class="project-features">
                                        @if (project.Videos != null && project.Videos.Any())
                                        {
                                            <div class="feature-badge">
                                                <i class="bi bi-play-circle"></i>
                                                <span>فيديو</span>
                                            </div>
                                        }
                                        @if (project.Images != null && project.Images.Count > 1)
                                        {
                                            <div class="feature-badge">
                                                <i class="bi bi-images"></i>
                                                <span>@project.Images.Count صور</span>
                                            </div>
                                        }
                                        @if (project.Expenses != null && project.Expenses.Any())
                                        {
                                            <div class="feature-badge">
                                                <i class="bi bi-receipt"></i>
                                                <span>@project.Expenses.Count بند</span>
                                            </div>
                                        }
                                    </div>

                                    <div class="project-meta">
                                        <div class="project-budget">
                                            <i class="bi bi-cash-coin"></i>
                                            @if (project.TotalBudget > 0)
                                            {
                                                @($"{project.TotalBudget.ToString("N0")} {Currency}")
                                            }
                                            else
                                            {
                                                @("تطوع")
                                            }
                                        </div>
                                        <div class="project-date">
                                            <i class="bi bi-calendar-event"></i>
                                            @FormatDate(project.CreatedDate)
                                        </div>
                                    </div>

                                    <!-- Progress Indicator -->
                                    <div class="project-progress">
                                        <div class="progress-info">
                                            <small>مرحلة التنفيذ</small>
                                            <small>@GetProgressPercentage(project.Status.ToString())%</small>
                                        </div>
                                        <div class="progress">
                                            <div class="progress-bar @GetProgressBarClass(project.Status.ToString())"
                                                 style="width: @GetProgressPercentage(project.Status.ToString())%"></div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Card Footer -->
                                <div class="project-card-footer">
                                    <a href="/project-details/@project.Id" class="btn btn-project-org">
                                        <span>استكشف المشروع</span>
                                        <i class="bi bi-arrow-left-short"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <div class="action-section">
            <div class="cta-card">
                <div class="cta-content">
                    <h3>هل أنت منظمة وتريد عرض مشاريعك؟</h3>
                    <p>نحن نرحب بجميع المنظمات الخيرية لعرض مشاريعها وزيادة الشفافية في العمل الخيري</p>
                    <div class="cta-actions">
                        <a href="/#contribute" class="btn btn-mata">ساهم في المشاريع</a>
                        <a href="/projects" class="btn btn-outline-primary">تصفح المشاريع العامة</a>
                    </div>
                </div>
                <div class="cta-illustration">
                    <i class="bi bi-people-fill"></i>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    html, body, .main-section, .form-section, .modal, .modal-content, .container {
        direction: rtl !important;
        text-align: right !important;
    }

    .organization-projects-page {
        padding-top: 140px;
        background: linear-gradient(135deg, #f1f8ff 0%, #e3f2fd 100%);
        min-height: 100vh;
    }

    /* Enhanced Section Header */
    .section-header {
        margin-bottom: 60px;
        position: relative;
    }

    .header-decoration {
        margin-bottom: 20px;
    }

        .header-decoration i {
            font-size: 4rem;
            color: #3f51b5;
            opacity: 0.8;
            animation: float 3s ease-in-out infinite;
        }

    .section-title {
        font-size: 3.2rem;
        margin-bottom: 25px;
        font-weight: 700;
        letter-spacing: -0.02em;
        background: linear-gradient(135deg, var(--bs-primary), #3f51b5);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .section-subtitle {
        font-size: 1.4rem;
        color: #555;
        margin-bottom: 35px;
        line-height: 1.7;
        max-width: 800px;
        margin-left: auto;
        margin-right: auto;
    }

    .section-decoration {
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto;
        width: 250px;
    }

        .section-decoration span {
            height: 3px;
            background: linear-gradient(90deg, transparent, #3f51b5, transparent);
            flex-grow: 1;
        }

        .section-decoration i {
            color: #e91e63;
            font-size: 16px;
            margin: 0 25px;
            animation: heartbeat 2s infinite;
        }

    /* Loading State */
    .loading-state {
        text-align: center;
        padding: 80px 20px;
    }

    .loading-spinner {
        margin-bottom: 30px;
        position: relative;
    }

    .loading-dots {
        display: flex;
        justify-content: center;
        gap: 8px;
        margin-top: 20px;
    }

        .loading-dots span {
            width: 8px;
            height: 8px;
            background: var(--bs-primary);
            border-radius: 50%;
            animation: bounce 1.4s infinite ease-in-out both;
        }

            .loading-dots span:nth-child(1) {
                animation-delay: -0.32s;
            }

            .loading-dots span:nth-child(2) {
                animation-delay: -0.16s;
            }

    .loading-text {
        color: #666;
        font-size: 1.2rem;
        font-weight: 500;
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 100px 20px;
        max-width: 600px;
        margin: 0 auto;
    }

    .empty-icon i {
        font-size: 5rem;
        color: #ddd;
        margin-bottom: 30px;
        opacity: 0.8;
    }

    .empty-state h4 {
        color: #555;
        margin-bottom: 20px;
        font-size: 1.8rem;
    }

    .empty-state p {
        color: #777;
        line-height: 1.6;
        margin-bottom: 30px;
    }

    .empty-actions .btn {
        margin: 0 10px;
    }

    /* Stats Section */
    .projects-stats {
        margin-bottom: 50px;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: white;
        border-radius: 16px;
        padding: 24px;
        box-shadow: 0 8px 25px rgba(0,0,0,0.06);
        display: flex;
        align-items: center;
        gap: 16px;
        border: 1px solid rgba(0,0,0,0.05);
        transition: all 0.3s ease;
    }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 35px rgba(0,0,0,0.1);
        }

    .stat-icon {
        width: 60px;
        height: 60px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, var(--bs-primary), #3a805f);
        color: white;
        font-size: 1.5rem;
    }

        .stat-icon.completed {
            background: linear-gradient(135deg, #28a745, #1e7e34);
        }

        .stat-icon.in-progress {
            background: linear-gradient(135deg, #007bff, #0056b3);
        }

        .stat-icon.budget {
            background: linear-gradient(135deg, #ffc107, #e0a800);
        }

    .stat-content h3 {
        font-size: 1.8rem;
        font-weight: 700;
        color: #2c3e50;
        margin: 0 0 5px 0;
    }

    .stat-content p {
        color: #666;
        margin: 0;
        font-size: 0.9rem;
    }

    /* Enhanced Project Cards */
    .organization-card {
        position: relative;
        background: white;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(63, 81, 181, 0.08);
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        height: 100%;
        border: 2px solid transparent;
    }

        .organization-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 5px;
            background: linear-gradient(90deg, #3f51b5, #9c27b0);
        }

        .organization-card:hover {
            transform: translateY(-15px);
            box-shadow: 0 20px 50px rgba(63, 81, 181, 0.15);
            border-color: rgba(63, 81, 181, 0.1);
        }

    .organization-badge {
        position: absolute;
        top: 15px;
        left: 15px;
        background: linear-gradient(135deg, #3f51b5, #303f9f);
        color: white;
        padding: 8px 12px;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        z-index: 3;
        display: flex;
        align-items: center;
        gap: 5px;
        box-shadow: 0 4px 12px rgba(63, 81, 181, 0.3);
    }

    .project-card-image {
        position: relative;
        height: 240px;
        overflow: hidden;
    }

    .project-thumbnail {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.8s ease;
    }

    .organization-card:hover .project-thumbnail {
        transform: scale(1.1);
    }

    .project-thumbnail-placeholder {
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, #f5f5f5 0%, #eeeeee 100%);
        color: #999;
    }

        .project-thumbnail-placeholder i {
            font-size: 4rem;
            margin-bottom: 10px;
        }

        .project-thumbnail-placeholder p {
            margin: 0;
            font-size: 0.9rem;
        }

    .project-overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: 50%;
        background: linear-gradient(to top, rgba(63, 81, 181, 0.8) 0%, rgba(63, 81, 181, 0) 100%);
        opacity: 0;
        transition: all 0.4s ease;
    }

    .organization-card:hover .project-overlay {
        opacity: 1;
    }

    .project-status {
        position: absolute;
        top: 15px;
        right: 15px;
        z-index: 2;
    }

    .status-badge {
        display: flex;
        align-items: center;
        gap: 6px;
        padding: 10px 14px;
        border-radius: 25px;
        font-size: 0.8rem;
        font-weight: 600;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255,255,255,0.2);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }

    /* Card Body */
    .project-card-body {
        padding: 28px;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    .project-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #2c3e50;
        margin-bottom: 15px;
        line-height: 1.4;
        position: relative;
    }

        .project-title::after {
            content: '';
            position: absolute;
            bottom: -8px;
            right: 0;
            width: 0;
            height: 4px;
            background: linear-gradient(90deg, #3f51b5, #9c27b0);
            transition: width 0.4s ease;
            border-radius: 2px;
        }

    .organization-card:hover .project-title::after {
        width: 80px;
    }

    .project-description {
        color: #666;
        font-size: 0.95rem;
        line-height: 1.7;
        margin-bottom: 20px;
        flex-grow: 1;
    }

    /* Project Features */
    .project-features {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin-bottom: 20px;
    }

    .feature-badge {
        display: flex;
        align-items: center;
        gap: 4px;
        background: rgba(63, 81, 181, 0.1);
        color: #3f51b5;
        padding: 4px 10px;
        border-radius: 12px;
        font-size: 0.75rem;
        font-weight: 500;
    }

        .feature-badge i {
            font-size: 0.8rem;
        }

    .project-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-top: 15px;
        border-top: 1px solid rgba(0,0,0,0.06);
    }

    .project-budget, .project-date {
        font-size: 0.85rem;
        display: flex;
        align-items: center;
        gap: 6px;
    }

    .project-budget {
        color: #3f51b5;
        font-weight: 700;
        background: rgba(63, 81, 181, 0.1);
        padding: 6px 12px;
        border-radius: 10px;
    }

    .project-date {
        color: #666;
        font-weight: 500;
    }

    /* Progress Indicator */
    .project-progress {
        margin-top: auto;
    }

    .progress-info {
        display: flex;
        justify-content: space-between;
        margin-bottom: 8px;
        font-size: 0.8rem;
        color: #666;
    }

    .progress {
        height: 8px;
        background-color: #f0f0f0;
        border-radius: 4px;
        overflow: hidden;
    }

    .progress-bar {
        height: 100%;
        transition: width 0.6s ease;
        border-radius: 4px;
    }

        .progress-bar.bg-info {
            background: linear-gradient(90deg, #17a2b8, #138496);
        }

        .progress-bar.bg-primary {
            background: linear-gradient(90deg, #007bff, #0056b3);
        }

        .progress-bar.bg-success {
            background: linear-gradient(90deg, #28a745, #1e7e34);
        }

    /* Card Footer */
    .project-card-footer {
        padding: 24px 28px;
        background: rgba(248, 249, 250, 0.5);
        border-top: 1px solid rgba(0,0,0,0.05);
    }

    .btn-project-org {
        width: 100%;
        color: white;
        background: linear-gradient(135deg, #3f51b5 0%, #303f9f 100%);
        border: none;
        border-radius: 15px;
        padding: 14px 20px;
        font-weight: 600;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

        .btn-project-org::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.6s ease;
        }

        .btn-project-org:hover::before {
            left: 100%;
        }

        .btn-project-org:hover {
            background: linear-gradient(135deg, #303f9f 0%, #3f51b5 100%);
            box-shadow: 0 10px 30px rgba(63, 81, 181, 0.3);
            transform: translateY(-3px);
            color: white;
        }

        .btn-project-org i {
            transition: transform 0.3s ease;
            font-size: 1.3em;
        }

        .btn-project-org:hover i {
            transform: translateX(-5px);
        }

    /* CTA Section */
    .action-section {
        margin-top: 80px;
    }

    .cta-card {
        background: linear-gradient(135deg, #3f51b5 0%, #9c27b0 100%);
        color: white;
        border-radius: 20px;
        padding: 50px 40px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        box-shadow: 0 15px 40px rgba(63, 81, 181, 0.2);
        overflow: hidden;
        position: relative;
    }

        .cta-card::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -20%;
            width: 100%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            transform: rotate(-15deg);
        }

    .cta-content {
        flex: 1;
        position: relative;
        z-index: 2;
    }

        .cta-content h3 {
            font-size: 1.8rem;
            margin-bottom: 15px;
            font-weight: 700;
        }

        .cta-content p {
            margin-bottom: 25px;
            opacity: 0.9;
            line-height: 1.6;
        }

    .cta-actions {
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
    }

        .cta-actions .btn {
            padding: 12px 25px;
            border-radius: 25px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .cta-actions .btn-mata {
            background: white;
            color: #3f51b5;
        }

            .cta-actions .btn-mata:hover {
                background: #f8f9fa;
                transform: translateY(-2px);
            }

        .cta-actions .btn-outline-primary {
            border-color: white;
            color: white;
        }

            .cta-actions .btn-outline-primary:hover {
                background: white;
                color: #3f51b5;
            }

    .cta-illustration {
        flex-shrink: 0;
        margin-right: 40px;
        position: relative;
        z-index: 2;
    }

        .cta-illustration i {
            font-size: 5rem;
            opacity: 0.3;
            animation: float 4s ease-in-out infinite;
        }

    /* Status Badge Classes */
    .bg-status-planned {
        background: linear-gradient(135deg, #17a2b8, #138496);
    }

    .bg-status-inprogress {
        background: linear-gradient(135deg, #007bff, #0056b3);
    }

    .bg-status-completed {
        background: linear-gradient(135deg, #28a745, #1e7e34);
    }

    /* Animations */
    @@keyframes float {
        0%, 100% {
            transform: translateY(0px);
        }

        50% {
            transform: translateY(-10px);
        }
    }

    @@keyframes heartbeat {
        0%, 100% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.1);
        }
    }

    @@keyframes bounce {
        0%, 80%, 100% {
            transform: scale(0);
        }

        40% {
            transform: scale(1.0);
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(40px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    [data-aos="fade-up"] {
        opacity: 0;
        transform: translateY(40px);
        transition: opacity 0.8s ease, transform 0.8s ease;
    }

        [data-aos="fade-up"].aos-animate {
            opacity: 1;
            transform: translateY(0);
        }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .organization-projects-page {
            padding-top: 120px;
        }

        .section-title {
            font-size: 2.5rem;
        }

        .section-subtitle {
            font-size: 1.2rem;
        }

        .stats-grid {
            grid-template-columns: repeat(2, 1fr);
        }

        .project-card-image {
            height: 200px;
        }

        .project-card-body {
            padding: 20px;
        }

        .project-card-footer {
            padding: 16px 20px;
        }

        .cta-card {
            flex-direction: column;
            text-align: center;
            padding: 40px 30px;
        }

        .cta-illustration {
            margin-right: 0;
            margin-top: 20px;
        }

        .cta-actions {
            justify-content: center;
        }
    }

    @@media (max-width: 576px) {
        .section-title {
            font-size: 2rem;
        }

        .stats-grid {
            grid-template-columns: 1fr;
        }

        .project-meta {
            flex-direction: column;
            gap: 10px;
            align-items: flex-start;
        }

        .cta-actions {
            flex-direction: column;
        }

            .cta-actions .btn {
                width: 100%;
            }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Enhanced AOS Animation
        const animatedElements = document.querySelectorAll('[data-aos]');

        const observer = new IntersectionObserver((entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    const delay = entry.target.getAttribute('data-aos-delay') || 0;
                    setTimeout(() => {
                        entry.target.classList.add('aos-animate');
                    }, delay);
                }
            });
        }, {
            threshold: 0.1,
            rootMargin: '50px'
        });

        animatedElements.forEach(el => {
            observer.observe(el);
        });

        // Stat counter animation
        const statCards = document.querySelectorAll('.stat-card h3');
        statCards.forEach(stat => {
            const targetNumber = parseInt(stat.textContent.replace(/,/g, ''));
            if (!isNaN(targetNumber)) {
                animateCounter(stat, targetNumber);
            }
        });
    });

    function animateCounter(element, target) {
        let current = 0;
        const increment = target / 100;
        const timer = setInterval(() => {
            current += increment;
            if (current >= target) {
                current = target;
                clearInterval(timer);
            }
            element.textContent = Math.floor(current).toLocaleString();
        }, 20);
    }
</script>

@code {
    private List<ProjectDTO> projects = new List<ProjectDTO>();
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadProjects();
    }

    private async Task LoadProjects()
    {
        loading = true;
        try
        {
            // Get all projects - in a real implementation, you might filter by organization type
            var allProjects = await ProjectService.GetProjectsByTypeAsync(ProjectType.Organization);
            projects = allProjects ?? new List<ProjectDTO>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading projects: {ex.Message}");
        }
        finally
        {
            loading = false;
        }
    }

    private string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "planned" => "bg-status-planned",
            "inprogress" => "bg-status-inprogress",
            "completed" => "bg-status-completed",
            _ => "bg-secondary"
        };
    }

    private string GetStatusText(string status)
    {
        return status?.ToLower() switch
        {
            "planned" => "مخطط",
            "inprogress" => "قيد التنفيذ",
            "completed" => "مكتمل",
            _ => status ?? "غير محدد"
        };
    }

    private string GetStatusIcon(string status)
    {
        return status?.ToLower() switch
        {
            "planned" => "bi-calendar-check",
            "inprogress" => "bi-gear-fill",
            "completed" => "bi-check-circle-fill",
            _ => "bi-question-circle"
        };
    }

    private int GetProgressPercentage(string status)
    {
        return status?.ToLower() switch
        {
            "planned" => 25,
            "inprogress" => 60,
            "completed" => 100,
            _ => 0
        };
    }

    private string GetProgressBarClass(string status)
    {
        return status?.ToLower() switch
        {
            "planned" => "bg-info",
            "inprogress" => "bg-primary",
            "completed" => "bg-success",
            _ => "bg-secondary"
        };
    }

    private string FormatDate(DateTime date)
    {
        return date.ToString("yyyy-MM-dd");
    }
}